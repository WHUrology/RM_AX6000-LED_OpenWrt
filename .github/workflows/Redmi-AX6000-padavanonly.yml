#
# Copyright (c) 2019-2020 P3TERX <https://p3terx.com>
#
# This is free software, licensed under the MIT License.
# See /LICENSE for more information.
#
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
#
###############ÊîπÂêçÂ≠ó##############
name: Redmi-AX6000-padavanonly

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'
#  schedule:
#    - cron: 0 16 * * *

env:
  REPO_URL: https://github.com/hanwckf/immortalwrt-mt798x
  REPO_BRANCH: openwrt-21.02
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: padavanonly/Redmi-AX6000/.config
  DIY_P1_SH: padavanonly/Redmi-AX6000/diy-part1.sh
  DIY_P2_SH: padavanonly/Redmi-AX6000/diy-part2.sh
  SSH_ACTIONS: false
  UPLOAD_FIRMWARE: true
  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai
  ###############ÊîπÂêçÂ≠ó##############
  OPENWRT_NAME: RedmiAx6000

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
    - name: Ê£ÄÊü•È°πÁõÆÂàÜÊîØ
      uses: actions/checkout@main

    - name: ÈáäÊîæÁ£ÅÁõòÁ©∫Èó¥
      uses: jlumbroso/free-disk-space@main
      with:
        tool-cache: true
        android: true
        dotnet: true
        haskell: true
        large-packages: true
        swap-storage: true

    - name: ÂàùÂßãÂåñÁºñËØëÁéØÂ¢É
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        # Â∞ùËØïÂ§öÁßçÊñπÂºèÂÆâË£ÖÊàñÊõø‰ª£ libncurses5-dev (ÂèÇËÄÉ‰πãÂâçÁöÑÂõûÁ≠î)
        sudo -E apt-get -qq install -y libncurses5-dev 2>/dev/null || \
        # ... (ÂÖ∂‰ªñÂÆâË£ÖÂ∞ùËØï) ...
        sudo -E apt-get -qq install -y libncurses-dev
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir

    - name: ‰∏ãËΩΩÂõ∫‰ª∂Ê∫êÁ†Å
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt

    - name: ÁºìÂ≠ò DL ‰æùËµñÈ°π
      uses: actions/cache@v3
      id: cache-dl
      with:
        path: openwrt/dl
        key: ${{ runner.os }}-dl-${{ hashFiles('**/feeds.conf.default') }}-${{ hashFiles('**/config') }}
        restore-keys: |
          ${{ runner.os }}-dl-

    - name: Âä†ËΩΩfeeds.conf.default & DIY_P1_SH
      run: |
        [ -e $FEEDS_CONF ] && mv $FEEDS_CONF openwrt/feeds.conf.default
        chmod +x $DIY_P1_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P1_SH

    - name: Êõ¥Êñ∞ & ÂÆâË£Ö feeds
      run: |
        cd openwrt
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: Âä†ËΩΩconfig & DIY_P2_SH
      run: |
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x $DIY_P2_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P2_SH

    - name: ‰∏ãËΩΩÂÆâË£ÖÂåÖ
      id: package
      run: |
        cd openwrt
        make defconfig
        make download -j$(nproc) # ‰ΩøÁî®Âπ∂Ë°å‰∏ãËΩΩ
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    # ... ÂêéÁª≠Ê≠•È™§ÔºàÁºñËØë„ÄÅ‰∏ä‰º†Á≠âÔºâ‰øùÊåÅ‰∏çÂèò ...
        
    - name: ÁºñËØëÂõ∫‰ª∂
      id: compile
      run: |
        cd openwrt
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j1 || make -j1 V=s
        DEVICE_NAME=$(grep '^CONFIG_TARGET_DEVICE_.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' | tr -d '-' | tr '[:upper:]' '[:lower:]') [ -n "$DEVICE_NAME" ] && echo "DEVICE_NAME=${DEVICE_NAME//:/_}" >> $GITHUB_ENV
        echo "DEVICE_NAME: $DEVICE_NAME"  # ËæìÂá∫DEVICE_NAME
        TARGET_NAME=$(grep '^CONFIG_TARGET_DEVICE_.*DEVICE.*=y' .config | sed -r 's/.*TARGET_.*_(.*)_DEVICE_.*=y/\1/' | tr -d '-' | tr '[:upper:]' '[:lower:]') [ -n "$TARGET_NAME" ] && echo "TARGET_NAME=${TARGET_NAME//:/_}" >> $GITHUB_ENV
        echo "TARGET_NAME: $TARGET_NAME"  # ËæìÂá∫TARGET_NAME
        echo "FILE_DATE=$(date +"%Y.%m.%d-%H%M")" >> $GITHUB_ENV
        echo "status=success" >> $GITHUB_OUTPUT
        
    - name: Êü•ÁúãÁ£ÅÁõò‰ΩøÁî®ÊÉÖÂÜµ
      if: (!cancelled())
      run: df -hT

    - name: Êï¥ÁêÜÊñá‰ª∂Âπ∂ÈáçÂëΩÂêç
      id: organize
      if: env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      run: | 
        cd openwrt/bin/targets/*/*
        rm -rf packages
        sudo -E apt-get -qq install rename
        rename 's/.*${{ env.TARGET_NAME }}/${{ env.FILE_DATE }}_${{ env.OPENWRT_NAME }}/' *
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "status=success" >> $GITHUB_OUTPUT
      
    - name: ‰∏ä‰º†Âõ∫‰ª∂Âà∞github
      uses: actions/upload-artifact@main
      if: steps.organize.outputs.status == 'success' && !cancelled()
      with:
        name: ${{ env.FILE_DATE }}_${{ env.OPENWRT_NAME }}_${{ env.DEVICE_NAME }}
        path: ${{ env.FIRMWARE }}

    - name: ÁîüÊàêreleaseÊ†áÁ≠æ
      id: tag
      if: env.UPLOAD_RELEASE == 'true' && !cancelled()
      run: |
        echo "release_tag=${{ env.FILE_DATE }}_${{ env.OPENWRT_NAME }}_${{ env.DEVICE_NAME }}" | tr -d '-' | tr '[:upper:]' '[:lower:]' >> $GITHUB_OUTPUT
        touch release.txt
        echo "Êé®Ëçê‰ΩøÁî®UbootÂà∑ÂÖ•ÔºåÂõ∫‰ª∂ÈÄâÊã©sysupgradeÁ±ªÂûãÔºåÈªòËÆ§Âú∞ÂùÄ192.168.2.1ÔºåÁî®Êà∑ÂêçrootÔºåÂØÜÁ†Å‰∏∫Á©∫„ÄÇ" >> release.txt
        echo "Âõ∫‰ª∂‰ªìÂ∫ìÂú∞ÂùÄ‰∏∫https://github.com/padavanonly/immortalwrt-mt798x" >> release.txt
        echo "Â¶ÇÊûú‰ªìÂ∫ìÊúâÊõ¥Êñ∞Ôºå‰ºö‰∏çÂÆöÊúüÂÜçÁºñËØë„ÄÇ" >> release.txt
        echo "üì• Âõ∫‰ª∂‰∏ãËΩΩÔºöÈÄöËøáUbootÂà∑ÂÖ•ÔºåÈó™Â≠òÂ∏ÉÂ±ÄÈÄâÊã©(immortalwrt ubi 110MB);Â¶ÇÊûúÊòØstockÂõ∫‰ª∂ÔºåÂàôÈÄâÊã©Èó™Â≠òÈªòËÆ§Â∏ÉÂ±ÄÊñπÊ°à" >> release.txt
        echo "status=success" >> $GITHUB_OUTPUT
        
    - name: ÂèëÂ∏ÉËá≥release
      uses: softprops/action-gh-release@v1
      if: steps.tag.outputs.status == 'success' && !cancelled()
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        files: ${{ env.FIRMWARE }}/*
        name: ${{ env.FILE_DATE }}_${{ env.OPENWRT_NAME }}_${{ env.DEVICE_NAME }}
        tag_name: ${{ steps.tag.outputs.release_tag }}
        body_path: release.txt
